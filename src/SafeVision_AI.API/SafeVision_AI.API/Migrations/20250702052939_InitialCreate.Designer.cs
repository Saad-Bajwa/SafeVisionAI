// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SafeVision_AI.API.Data;

#nullable disable

namespace SafeVision_AI.API.Migrations
{
    [DbContext(typeof(SafeVisionDbContext))]
    [Migration("20250702052939_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SafeVisionAI.Core.Entities.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalysisInterval")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("FrameRate")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StreamUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cameras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalysisInterval = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            FrameRate = 30,
                            IsActive = true,
                            LastSeen = new DateTime(2024, 1, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            Location = "Building A - Main Entrance",
                            Name = "Main Entrance",
                            StreamUrl = "rtsp://demo:demo@ipvmdemo.dyndns.org:5541/onvif-media/media.amp?profile=profile_1_h264&sessiontimeout=60&streamtype=unicast"
                        },
                        new
                        {
                            Id = 2,
                            AnalysisInterval = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 8, 5, 0, 0, DateTimeKind.Utc),
                            FrameRate = 30,
                            IsActive = true,
                            LastSeen = new DateTime(2024, 1, 1, 8, 5, 0, 0, DateTimeKind.Utc),
                            Location = "Building A - Parking Area",
                            Name = "Parking Lot",
                            StreamUrl = "rtsp://demo:demo@ipvmdemo.dyndns.org:5542/onvif-media/media.amp?profile=profile_1_h264&sessiontimeout=60&streamtype=unicast"
                        },
                        new
                        {
                            Id = 3,
                            AnalysisInterval = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 8, 10, 0, 0, DateTimeKind.Utc),
                            FrameRate = 25,
                            IsActive = false,
                            LastSeen = new DateTime(2024, 1, 1, 6, 10, 0, 0, DateTimeKind.Utc),
                            Location = "Building B - Cafeteria",
                            Name = "Cafeteria",
                            StreamUrl = "rtsp://demo:demo@ipvmdemo.dyndns.org:5543/onvif-media/media.amp?profile=profile_1_h264&sessiontimeout=60&streamtype=unicast"
                        });
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.DailyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CriticalIncidents")
                        .HasColumnType("int");

                    b.Property<DateTime>("GeneratedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("GeneratedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HighIncidents")
                        .HasColumnType("int");

                    b.Property<int>("LowIncidents")
                        .HasColumnType("int");

                    b.Property<int>("MediumIncidents")
                        .HasColumnType("int");

                    b.Property<string>("ReportData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResolvedIncidents")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalIncidents")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportDate")
                        .IsUnique();

                    b.ToTable("DailyReports");
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AudioClipUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BoundingBoxHeight")
                        .HasColumnType("int");

                    b.Property<int?>("BoundingBoxWidth")
                        .HasColumnType("int");

                    b.Property<int?>("BoundingBoxX")
                        .HasColumnType("int");

                    b.Property<int?>("BoundingBoxY")
                        .HasColumnType("int");

                    b.Property<int>("CameraId")
                        .HasColumnType("int");

                    b.Property<double>("ConfidenceScore")
                        .HasPrecision(5, 4)
                        .HasColumnType("float(5)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("DetectedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("ModelVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ProcessingDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResolvedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VideoClipUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DetectedAt");

                    b.HasIndex("IsResolved");

                    b.HasIndex("Severity");

                    b.HasIndex("Type");

                    b.HasIndex("CameraId", "DetectedAt");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.IncidentAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcknowledgedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IncidentId")
                        .HasColumnType("int");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RecipientPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("IncidentId");

                    b.HasIndex("Status");

                    b.ToTable("IncidentAlerts");
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.ProcessingQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CameraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("MaxRetries")
                        .HasColumnType("int");

                    b.Property<string>("PayloadData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Status");

                    b.HasIndex("Status", "CreatedAt");

                    b.ToTable("ProcessingQueue");
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.Incident", b =>
                {
                    b.HasOne("SafeVisionAI.Core.Entities.Camera", "Camera")
                        .WithMany("Incidents")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.IncidentAlert", b =>
                {
                    b.HasOne("SafeVisionAI.Core.Entities.Incident", "Incident")
                        .WithMany("Alerts")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.ProcessingQueue", b =>
                {
                    b.HasOne("SafeVisionAI.Core.Entities.Camera", "Camera")
                        .WithMany()
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.Camera", b =>
                {
                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("SafeVisionAI.Core.Entities.Incident", b =>
                {
                    b.Navigation("Alerts");
                });
#pragma warning restore 612, 618
        }
    }
}
